version: "3.8"

volumes:
  postgres-data: {}

  
networks:
  demo:
    name: demo
    driver: bridge

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    networks:
      - demo
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "user"
      POSTGRES_DB: mydb1
    volumes:
      - postgres-data:/var/lib/postgres

  ApiGateway:
    image: api
    container_name: api_container
    restart: on-failure
    networks:
      - demo
    depends_on:
      - postgres
    environment:
      DATABASE_USERNAME: "user"
      DATABASE_PASSWORD: "user"
      DATABASE_HOST: "postgres"
      DATABASE_TYPE: "postgres"
      DATABASE_SCHEMA: "mydb1"
      STAGE: "production"
      PORT: "5000"
    ports:
      - "53843:5000"
    volumes:
      - postgres-data:/var/lib/postgres:rw

  Feedback:
    image: feedback
    container_name: feedback_container
    restart: on-failure
    networks:
      - demo
    depends_on:
      - postgres
    environment:
      DATABASE_USERNAME: "user"
      DATABASE_PASSWORD: "user"
      DATABASE_HOST: "postgres"
      DATABASE_TYPE: "postgres"
      DATABASE_SCHEMA: "mydb1"
      STAGE: "test"
      PORT: "8080"
    ports:
      - "8080:8080"
    volumes:
      - postgres-data:/var/lib/postgres:rw
  
  Rooms:
    image: rooms
    container_name: rooms_container
    restart: on-failure
    networks:
      - demo
    depends_on:
      - postgres
    environment:
      DATABASE_USERNAME: "user"
      DATABASE_PASSWORD: "user"
      DATABASE_HOST: "postgres"
      DATABASE_TYPE: "postgres"
      DATABASE_SCHEMA: "mydb1"
      STAGE: "test"
      PORT: "60304"
    ports:
      - "60304:60304"
    volumes:
      - postgres-data:/var/lib/postgres:rw

  Users:
    image: users
    container_name: users_container
    restart: on-failure
    networks:
      - demo
    depends_on:
      - postgres
    environment:
      DATABASE_USERNAME: "user"
      DATABASE_PASSWORD: "user"
      DATABASE_HOST: "postgres"
      DATABASE_TYPE: "postgres"
      DATABASE_SCHEMA: "mydb1"
      STAGE: "test"
      PORT: "8081"
    ports:
      - "8081:8081"
    volumes:
      - postgres-data:/var/lib/postgres:rw
  
  PatientDocuments:
    image: documents
    container_name: documents_container
    restart: on-failure
    networks:
      - demo
    depends_on:
      - postgres
    environment:
      DATABASE_USERNAME: "user"
      DATABASE_PASSWORD: "user"
      DATABASE_HOST: "postgres"
      DATABASE_TYPE: "postgres"
      DATABASE_SCHEMA: "mydb1"
      STAGE: "test"
      PORT: "50577"
    ports:
      - "50577:50577"
    volumes:
      - postgres-data:/var/lib/postgres:rw

  Appointment:
    image: appointment
    container_name: appointment_container
    restart: on-failure
    networks:
      - demo
    depends_on:
      - postgres
    environment:
      DATABASE_USERNAME: "user"
      DATABASE_PASSWORD: "user"
      DATABASE_HOST: "postgres"
      DATABASE_TYPE: "postgres"
      DATABASE_SCHEMA: "mydb1"
      STAGE: "test"
      PORT: "8083"
    ports:
      - "8083:8083"
    volumes:
      - postgres-data:/var/lib/postgres:rw