// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PharmacyIntegration.Model;

namespace PharmacyIntegration.Migrations
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20201123140249_PharmacyNotificationMigration")]
    partial class PharmacyNotificationMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PharmacyIntegration.Model.Pharmacy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("APIEndpoint")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("APIKey")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Pharmacies");

                    b.HasData(
                        new
                        {
                            Id = "Jankovic",
                            APIEndpoint = "jankovic.rs",
                            APIKey = "ID1APIKEYAAAA"
                        },
                        new
                        {
                            Id = "Liman",
                            APIEndpoint = "liman.li",
                            APIKey = "ID2APIKEYAAAA"
                        });
                });

            modelBuilder.Entity("PharmacyIntegration.Model.PharmacyNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PharmacyID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("PharmacyID");

                    b.ToTable("PharmacyNotifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Approved = true,
                            Content = "Aspirin nam je jeftin. Bas jako. Ide gaso!",
                            PharmacyID = "Jankovic"
                        },
                        new
                        {
                            Id = 2,
                            Approved = true,
                            Content = "Brufen nam je jeftin. Bas jako. Ide gaso!",
                            PharmacyID = "Liman"
                        });
                });

            modelBuilder.Entity("PharmacyIntegration.Model.PharmacyNotification", b =>
                {
                    b.HasOne("PharmacyIntegration.Model.Pharmacy", "Pharmacy")
                        .WithMany()
                        .HasForeignKey("PharmacyID");
                });
#pragma warning restore 612, 618
        }
    }
}
