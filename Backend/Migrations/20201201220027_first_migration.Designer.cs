// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace Backend.Migrations
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20201201220027_first_migration")]
    partial class first_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Backend.Examinations.Model.EmergencyRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<string>("SideNotes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfAppointment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("EmergencyRequests");
                });

            modelBuilder.Entity("Backend.Examinations.Model.ExaminationSurgery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DoctorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("ExaminationSurgeries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoctorId = "2406978890047",
                            MedicalRecordId = 1,
                            StartTime = new DateTime(2020, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            DoctorId = "2406978890047",
                            MedicalRecordId = 1,
                            StartTime = new DateTime(2020, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        });
                });

            modelBuilder.Entity("Backend.Examinations.Model.Treatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ExaminationSurgeryId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExaminationSurgeryId");

                    b.ToTable("Treatments");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Treatment");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            AdditionalNotes = ".",
                            Date = new DateTime(2020, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExaminationSurgeryId = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            AdditionalNotes = ".",
                            Date = new DateTime(2020, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExaminationSurgeryId = 1,
                            Type = 0
                        });
                });

            modelBuilder.Entity("Backend.Medications.Model.Allergens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Allergen")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordId");

                    b.HasIndex("MedicationId");

                    b.ToTable("Allergens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Allergen = "Polen",
                            MedicalRecordId = 1
                        },
                        new
                        {
                            Id = 2,
                            Allergen = "Prasina",
                            MedicalRecordId = 1
                        });
                });

            modelBuilder.Entity("Backend.Medications.Model.DosageOfIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int?>("MedicationId")
                        .HasColumnType("int");

                    b.Property<int>("MedicationIngredientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicationId");

                    b.HasIndex("MedicationIngredientId");

                    b.ToTable("DosageOfIngredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100.0,
                            MedicationIngredientId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 120.0,
                            MedicationIngredientId = 2
                        });
                });

            modelBuilder.Entity("Backend.Medications.Model.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Dosage")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Med")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MedicationCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicationId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicationCategoryId");

                    b.HasIndex("MedicationId");

                    b.HasIndex("RoomId");

                    b.ToTable("Medications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Company = "Famar",
                            Dosage = "400mg",
                            Med = "Brufen",
                            MedicationCategoryId = 1,
                            Quantity = 10,
                            RoomId = 1111,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Company = "Goodwill",
                            Dosage = "20mg",
                            Med = "Xanax",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1111,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Company = "Hemofarm",
                            Dosage = "500mg",
                            Med = "Panadon",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1111,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Company = "Famar",
                            Dosage = "30mg",
                            Med = "Diazepam",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1111,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Company = "Goodwill",
                            Dosage = "200mg",
                            Med = "Andol",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1111,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            Company = "Famar",
                            Dosage = "100mg",
                            Med = "Reglan",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1111,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Company = "Bosnalijek",
                            Dosage = "400mg",
                            Med = "Caffetin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1111,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            Company = "Galenika",
                            Dosage = "50mg",
                            Med = "Plavix",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1111,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            Company = "Famar",
                            Dosage = "25mg",
                            Med = "Ambien",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1111,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            Company = "Galenika",
                            Dosage = "200mg",
                            Med = "Ranisan",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1111,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            Company = "Hemofarm",
                            Dosage = "50mg",
                            Med = "Vicodin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1112,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            Company = "Famar",
                            Dosage = "40mg",
                            Med = "Adderall",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1112,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            Company = "Hemofarm",
                            Dosage = "100mg",
                            Med = "Hemomicin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1112,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            Company = "Galenika",
                            Dosage = "20mg",
                            Med = "Klonopin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1112,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            Company = "Hemofarm",
                            Dosage = "30mg",
                            Med = "Demerol",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1112,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            Company = "Famar",
                            Dosage = "40mg",
                            Med = "OxyCotin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1112,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            Company = "Goodwill",
                            Dosage = "60mg",
                            Med = "Percocet",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1112,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            Company = "Bosnalijek",
                            Dosage = "80mg",
                            Med = "Ritalin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1112,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            Company = "Famar",
                            Dosage = "100mg",
                            Med = "Eritromicin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1112,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            Company = "Bosnalijek",
                            Dosage = "200mg",
                            Med = "Penicillin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1112,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            Company = "Hemofarm",
                            Dosage = "150mg",
                            Med = "Amoksicilin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1213,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            Company = "Galenika",
                            Dosage = "200mg",
                            Med = "Cefaleksin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1213,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            Company = "Goodwill",
                            Dosage = "500mg",
                            Med = "Zoloft",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1213,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            Company = "Famar",
                            Dosage = "40mg",
                            Med = "Lexilium",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1213,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            Company = "Hemofarm",
                            Dosage = "50mg",
                            Med = "Bensedin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1213,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            Company = "Hemofarm",
                            Dosage = "50mg",
                            Med = "Benedril",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1213,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            Company = "Galenika",
                            Dosage = "100mg",
                            Med = "Letrox",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1213,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            Company = "Famar",
                            Dosage = "25mg",
                            Med = "Claritin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1213,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            Company = "Hemofarm",
                            Dosage = "500mg",
                            Med = "Flobian",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1213,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            Company = "Galenika",
                            Dosage = "75mg",
                            Med = "Lasix",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1213,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            Company = "Famar",
                            Dosage = "200mg",
                            Med = "Brufen",
                            MedicationCategoryId = 1,
                            Quantity = 10,
                            RoomId = 1214,
                            Status = 0
                        },
                        new
                        {
                            Id = 32,
                            Company = "Goodwill",
                            Dosage = "40mg",
                            Med = "Xanax",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1214,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            Company = "Hemofarm",
                            Dosage = "200mg",
                            Med = "Panadon",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1214,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            Company = "Famar",
                            Dosage = "60mg",
                            Med = "Diazepam",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1214,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            Company = "Goodwill",
                            Dosage = "400mg",
                            Med = "Andol",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1214,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            Company = "Hemofarm",
                            Dosage = "50mg",
                            Med = "Vicodin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1214,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            Company = "Famar",
                            Dosage = "80mg",
                            Med = "Adderall",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1214,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            Company = "Hemofarm",
                            Dosage = "100mg",
                            Med = "Hemomicin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1214,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            Company = "Galenika",
                            Dosage = "20mg",
                            Med = "Klonopin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1214,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            Company = "Hemofarm",
                            Dosage = "30mg",
                            Med = "Demerol",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 1214,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            Company = "Famar",
                            Dosage = "400mg",
                            Med = "Brufen",
                            MedicationCategoryId = 1,
                            Quantity = 10,
                            RoomId = 2102,
                            Status = 0
                        },
                        new
                        {
                            Id = 42,
                            Company = "Goodwill",
                            Dosage = "20mg",
                            Med = "Xanax",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2102,
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            Company = "Hemofarm",
                            Dosage = "500mg",
                            Med = "Panadon",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2102,
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            Company = "Famar",
                            Dosage = "30mg",
                            Med = "Diazepam",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2102,
                            Status = 1
                        },
                        new
                        {
                            Id = 45,
                            Company = "Goodwill",
                            Dosage = "200mg",
                            Med = "Andol",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2102,
                            Status = 1
                        },
                        new
                        {
                            Id = 46,
                            Company = "Famar",
                            Dosage = "100mg",
                            Med = "Reglan",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2102,
                            Status = 1
                        },
                        new
                        {
                            Id = 47,
                            Company = "Bosnalijek",
                            Dosage = "400mg",
                            Med = "Caffetin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2102,
                            Status = 1
                        },
                        new
                        {
                            Id = 48,
                            Company = "Galenika",
                            Dosage = "50mg",
                            Med = "Plavix",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2102,
                            Status = 1
                        },
                        new
                        {
                            Id = 49,
                            Company = "Famar",
                            Dosage = "25mg",
                            Med = "Ambien",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2102,
                            Status = 1
                        },
                        new
                        {
                            Id = 50,
                            Company = "Galenika",
                            Dosage = "200mg",
                            Med = "Ranisan",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2102,
                            Status = 1
                        },
                        new
                        {
                            Id = 51,
                            Company = "Hemofarm",
                            Dosage = "50mg",
                            Med = "Vicodin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2103,
                            Status = 1
                        },
                        new
                        {
                            Id = 52,
                            Company = "Famar",
                            Dosage = "40mg",
                            Med = "Adderall",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2103,
                            Status = 1
                        },
                        new
                        {
                            Id = 53,
                            Company = "Hemofarm",
                            Dosage = "100mg",
                            Med = "Hemomicin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2103,
                            Status = 1
                        },
                        new
                        {
                            Id = 54,
                            Company = "Galenika",
                            Dosage = "20mg",
                            Med = "Klonopin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2103,
                            Status = 1
                        },
                        new
                        {
                            Id = 55,
                            Company = "Hemofarm",
                            Dosage = "30mg",
                            Med = "Demerol",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2103,
                            Status = 1
                        },
                        new
                        {
                            Id = 56,
                            Company = "Famar",
                            Dosage = "40mg",
                            Med = "OxyCotin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2103,
                            Status = 1
                        },
                        new
                        {
                            Id = 57,
                            Company = "Goodwill",
                            Dosage = "60mg",
                            Med = "Percocet",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2103,
                            Status = 1
                        },
                        new
                        {
                            Id = 58,
                            Company = "Bosnalijek",
                            Dosage = "80mg",
                            Med = "Ritalin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2103,
                            Status = 1
                        },
                        new
                        {
                            Id = 59,
                            Company = "Famar",
                            Dosage = "100mg",
                            Med = "Eritromicin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2103,
                            Status = 1
                        },
                        new
                        {
                            Id = 60,
                            Company = "Bosnalijek",
                            Dosage = "200mg",
                            Med = "Penicillin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2103,
                            Status = 1
                        },
                        new
                        {
                            Id = 61,
                            Company = "Hemofarm",
                            Dosage = "150mg",
                            Med = "Amoksicilin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2106,
                            Status = 1
                        },
                        new
                        {
                            Id = 62,
                            Company = "Galenika",
                            Dosage = "200mg",
                            Med = "Cefaleksin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2106,
                            Status = 1
                        },
                        new
                        {
                            Id = 63,
                            Company = "Goodwill",
                            Dosage = "500mg",
                            Med = "Zoloft",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2106,
                            Status = 1
                        },
                        new
                        {
                            Id = 64,
                            Company = "Famar",
                            Dosage = "40mg",
                            Med = "Lexilium",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2106,
                            Status = 1
                        },
                        new
                        {
                            Id = 65,
                            Company = "Hemofarm",
                            Dosage = "50mg",
                            Med = "Bensedin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2106,
                            Status = 1
                        },
                        new
                        {
                            Id = 67,
                            Company = "Galenika",
                            Dosage = "100mg",
                            Med = "Letrox",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2106,
                            Status = 1
                        },
                        new
                        {
                            Id = 68,
                            Company = "Famar",
                            Dosage = "25mg",
                            Med = "Claritin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2106,
                            Status = 1
                        },
                        new
                        {
                            Id = 69,
                            Company = "Hemofarm",
                            Dosage = "500mg",
                            Med = "Flobian",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2106,
                            Status = 1
                        },
                        new
                        {
                            Id = 70,
                            Company = "Galenika",
                            Dosage = "75mg",
                            Med = "Lasix",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2106,
                            Status = 1
                        },
                        new
                        {
                            Id = 71,
                            Company = "Famar",
                            Dosage = "200mg",
                            Med = "Brufen",
                            MedicationCategoryId = 1,
                            Quantity = 10,
                            RoomId = 2106,
                            Status = 0
                        },
                        new
                        {
                            Id = 72,
                            Company = "Goodwill",
                            Dosage = "40mg",
                            Med = "Xanax",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2107,
                            Status = 1
                        },
                        new
                        {
                            Id = 73,
                            Company = "Hemofarm",
                            Dosage = "200mg",
                            Med = "Panadon",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2107,
                            Status = 1
                        },
                        new
                        {
                            Id = 74,
                            Company = "Famar",
                            Dosage = "60mg",
                            Med = "Diazepam",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2107,
                            Status = 1
                        },
                        new
                        {
                            Id = 75,
                            Company = "Goodwill",
                            Dosage = "400mg",
                            Med = "Andol",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2107,
                            Status = 1
                        },
                        new
                        {
                            Id = 76,
                            Company = "Hemofarm",
                            Dosage = "50mg",
                            Med = "Vicodin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2107,
                            Status = 1
                        },
                        new
                        {
                            Id = 77,
                            Company = "Famar",
                            Dosage = "80mg",
                            Med = "Adderall",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2107,
                            Status = 1
                        },
                        new
                        {
                            Id = 78,
                            Company = "Hemofarm",
                            Dosage = "100mg",
                            Med = "Hemomicin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2107,
                            Status = 1
                        },
                        new
                        {
                            Id = 79,
                            Company = "Galenika",
                            Dosage = "20mg",
                            Med = "Klonopin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2107,
                            Status = 1
                        },
                        new
                        {
                            Id = 80,
                            Company = "Hemofarm",
                            Dosage = "30mg",
                            Med = "Demerol",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2107,
                            Status = 1
                        },
                        new
                        {
                            Id = 81,
                            Company = "Hemofarm",
                            Dosage = "250mg",
                            Med = "Amoksicilin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2107,
                            Status = 1
                        },
                        new
                        {
                            Id = 82,
                            Company = "Galenika",
                            Dosage = "100mg",
                            Med = "Cefaleksin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2202,
                            Status = 1
                        },
                        new
                        {
                            Id = 83,
                            Company = "Goodwill",
                            Dosage = "200mg",
                            Med = "Zoloft",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2202,
                            Status = 1
                        },
                        new
                        {
                            Id = 84,
                            Company = "Famar",
                            Dosage = "80mg",
                            Med = "Lexilium",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2202,
                            Status = 1
                        },
                        new
                        {
                            Id = 85,
                            Company = "Hemofarm",
                            Dosage = "10mg",
                            Med = "Bensedin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2202,
                            Status = 1
                        },
                        new
                        {
                            Id = 86,
                            Company = "Famar",
                            Dosage = "100mg",
                            Med = "Brufen",
                            MedicationCategoryId = 1,
                            Quantity = 10,
                            RoomId = 2202,
                            Status = 0
                        },
                        new
                        {
                            Id = 87,
                            Company = "Goodwill",
                            Dosage = "60mg",
                            Med = "Xanax",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2202,
                            Status = 1
                        },
                        new
                        {
                            Id = 88,
                            Company = "Hemofarm",
                            Dosage = "250mg",
                            Med = "Panadon",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2202,
                            Status = 1
                        },
                        new
                        {
                            Id = 89,
                            Company = "Famar",
                            Dosage = "800mg",
                            Med = "Diazepam",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2202,
                            Status = 1
                        },
                        new
                        {
                            Id = 90,
                            Company = "Goodwill",
                            Dosage = "150mg",
                            Med = "Andol",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2202,
                            Status = 1
                        },
                        new
                        {
                            Id = 91,
                            Company = "Famar",
                            Dosage = "125mg",
                            Med = "Reglan",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2202,
                            Status = 1
                        },
                        new
                        {
                            Id = 92,
                            Company = "Bosnalijek",
                            Dosage = "200mg",
                            Med = "Caffetin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2206,
                            Status = 1
                        },
                        new
                        {
                            Id = 93,
                            Company = "Galenika",
                            Dosage = "100mg",
                            Med = "Plavix",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2206,
                            Status = 1
                        },
                        new
                        {
                            Id = 94,
                            Company = "Famar",
                            Dosage = "50mg",
                            Med = "Ambien",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2206,
                            Status = 1
                        },
                        new
                        {
                            Id = 95,
                            Company = "Galenika",
                            Dosage = "100mg",
                            Med = "Ranisan",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2206,
                            Status = 1
                        },
                        new
                        {
                            Id = 96,
                            Company = "Hemofarm",
                            Dosage = "60mg",
                            Med = "Demerol",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2206,
                            Status = 1
                        },
                        new
                        {
                            Id = 97,
                            Company = "Famar",
                            Dosage = "25mg",
                            Med = "OxyCotin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2206,
                            Status = 1
                        },
                        new
                        {
                            Id = 98,
                            Company = "Goodwill",
                            Dosage = "30mg",
                            Med = "Percocet",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2206,
                            Status = 1
                        },
                        new
                        {
                            Id = 99,
                            Company = "Bosnalijek",
                            Dosage = "40mg",
                            Med = "Ritalin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2206,
                            Status = 1
                        },
                        new
                        {
                            Id = 100,
                            Company = "Famar",
                            Dosage = "100mg",
                            Med = "Eritromicin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2206,
                            Status = 1
                        },
                        new
                        {
                            Id = 101,
                            Company = "Bosnalijek",
                            Dosage = "100mg",
                            Med = "Penicillin",
                            MedicationCategoryId = 1,
                            Quantity = 15,
                            RoomId = 2206,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Backend.Medications.Model.MedicationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecializationId");

                    b.ToTable("MedicationCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Drug",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Kategorija1",
                            SpecializationId = 1
                        });
                });

            modelBuilder.Entity("Backend.Medications.Model.MedicationIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("MedicationIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ibuprofen"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Paracetamol"
                        });
                });

            modelBuilder.Entity("Backend.Medications.Model.SideEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<int?>("MedicationId")
                        .HasColumnType("int");

                    b.Property<int>("SideEffectsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicationId");

                    b.HasIndex("SideEffectsId");

                    b.ToTable("SideEffects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Frequency = 2,
                            SideEffectsId = 1
                        },
                        new
                        {
                            Id = 2,
                            Frequency = 1,
                            SideEffectsId = 1
                        });
                });

            modelBuilder.Entity("Backend.Medications.Model.ValidationMed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DateOfValidation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DoctorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("MedicationId")
                        .HasColumnType("int");

                    b.Property<bool>("Reviewed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SideNotes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("MedicationId");

                    b.ToTable("ValidationMeds");
                });

            modelBuilder.Entity("Backend.Records.Model.Diagnosis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ExaminationSurgeryId")
                        .HasColumnType("int");

                    b.Property<int?>("FamilyIllnessHistoryId")
                        .HasColumnType("int");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ExaminationSurgeryId");

                    b.HasIndex("FamilyIllnessHistoryId");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("Diagnoses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExaminationSurgeryId = 1,
                            MedicalRecordId = 1,
                            Name = "Dijagnoza1"
                        },
                        new
                        {
                            Id = 2,
                            ExaminationSurgeryId = 1,
                            MedicalRecordId = 1,
                            Name = "Dijagnoza2"
                        });
                });

            modelBuilder.Entity("Backend.Records.Model.FamilyIllnessHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelativeMember")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("FamilyIllnessHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedicalRecordId = 1,
                            RelativeMember = 1
                        },
                        new
                        {
                            Id = 2,
                            MedicalRecordId = 1,
                            RelativeMember = 3
                        });
                });

            modelBuilder.Entity("Backend.Records.Model.MedicalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BloodType")
                        .HasColumnType("int");

                    b.Property<int>("CurrHealthState")
                        .HasColumnType("int");

                    b.Property<string>("PatientId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("MedicalRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BloodType = 2,
                            CurrHealthState = 2,
                            PatientId = "2406978890046"
                        });
                });

            modelBuilder.Entity("Backend.Records.Model.Symptoms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DiagnosisId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("DiagnosisId");

                    b.ToTable("Symptoms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiagnosisId = 1,
                            Name = "Kasalj"
                        },
                        new
                        {
                            Id = 2,
                            DiagnosisId = 1,
                            Name = "Temperatura"
                        });
                });

            modelBuilder.Entity("Backend.Records.Model.Therapy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HourConsumption")
                        .HasColumnType("int");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<int>("MedicationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordId");

                    b.HasIndex("MedicationId");

                    b.ToTable("Therapies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HourConsumption = 6,
                            MedicalRecordId = 1,
                            MedicationId = 1
                        },
                        new
                        {
                            Id = 2,
                            HourConsumption = 10,
                            MedicalRecordId = 1,
                            MedicationId = 2
                        });
                });

            modelBuilder.Entity("Backend.Records.Model.Vaccines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("Vaccines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedicalRecordId = 1,
                            Name = "Grip"
                        },
                        new
                        {
                            Id = 2,
                            MedicalRecordId = 1,
                            Name = "Male boginje"
                        });
                });

            modelBuilder.Entity("Backend.Reports.Model.MedicationUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MedicationId")
                        .HasColumnType("int");

                    b.Property<string>("MedicationUsageReportId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicationId");

                    b.HasIndex("MedicationUsageReportId");

                    b.ToTable("MedicationUsages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2020, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MedicationId = 1,
                            Usage = 4
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MedicationId = 2,
                            Usage = 10
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MedicationId = 1,
                            Usage = 50
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MedicationId = 2,
                            Usage = 1
                        });
                });

            modelBuilder.Entity("Backend.Reports.Model.MedicationUsageReport", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("From")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Until")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("MedicationUsageReports");
                });

            modelBuilder.Entity("Backend.Utils.Period", b =>
                {
                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.ToTable("Period");
                });

            modelBuilder.Entity("Model.Rooms.Bed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CurrentlyFree")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Beds");
                });

            modelBuilder.Entity("Model.Rooms.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Floor = 0,
                            HospitalId = 1,
                            Name = "General H1"
                        },
                        new
                        {
                            Id = 2,
                            Floor = 0,
                            HospitalId = 1,
                            Name = "Cardiology"
                        },
                        new
                        {
                            Id = 3,
                            Floor = 1,
                            HospitalId = 1,
                            Name = "Oncology"
                        },
                        new
                        {
                            Id = 4,
                            Floor = 1,
                            HospitalId = 1,
                            Name = "Radiology"
                        },
                        new
                        {
                            Id = 5,
                            Floor = 2,
                            HospitalId = 1,
                            Name = "Neurology"
                        },
                        new
                        {
                            Id = 6,
                            Floor = 2,
                            HospitalId = 1,
                            Name = "Intensive Care"
                        },
                        new
                        {
                            Id = 7,
                            Floor = 0,
                            HospitalId = 2,
                            Name = "General H2"
                        },
                        new
                        {
                            Id = 8,
                            Floor = 0,
                            HospitalId = 2,
                            Name = "Dialysis"
                        },
                        new
                        {
                            Id = 9,
                            Floor = 1,
                            HospitalId = 2,
                            Name = "Gastroenterology"
                        },
                        new
                        {
                            Id = 10,
                            Floor = 1,
                            HospitalId = 2,
                            Name = "Hematology"
                        },
                        new
                        {
                            Id = 11,
                            Floor = 2,
                            HospitalId = 2,
                            Name = "Rheumatology"
                        },
                        new
                        {
                            Id = 12,
                            Floor = 2,
                            HospitalId = 2,
                            Name = "Infectous Diseases"
                        },
                        new
                        {
                            Id = 13,
                            Floor = 1,
                            HospitalId = 3,
                            Name = "Infektivno"
                        });
                });

            modelBuilder.Entity("Model.Rooms.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("EquipmentType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mamogram"
                        },
                        new
                        {
                            Id = 2,
                            Name = "X-ray"
                        },
                        new
                        {
                            Id = 3,
                            Name = "CT"
                        },
                        new
                        {
                            Id = 4,
                            Name = "MRI"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ultra sound"
                        },
                        new
                        {
                            Id = 6,
                            Name = "EKG"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Holter"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Heart rate monitor"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Blood preasure monitor"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Blood shugar monitor"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Defibrilator"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Oxygen"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Respirator"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Gastroscope"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Colonoscope"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Blood test machine"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Stethoscope"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Suringe"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Needle"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Scalpel"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Pean"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Scissors"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Tweezers"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Surgical mask"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Surgical gloves"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Bandage"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Gauze"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Cotton pad"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Adhesive tape"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Alcohol"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Iodine"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Hydrogen peroxide"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Bed"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Table"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Chair"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Computer"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Examining table"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Weelchair"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Thermometer"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Dialysis machine"
                        });
                });

            modelBuilder.Entity("Model.Rooms.HospitalEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityInRoom")
                        .HasColumnType("int");

                    b.Property<int>("QuantityInStorage")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("RoomId");

                    b.ToTable("HospitalEquipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EquipmentTypeId = 9,
                            QuantityInRoom = 1,
                            QuantityInStorage = 8,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 2,
                            EquipmentTypeId = 10,
                            QuantityInRoom = 1,
                            QuantityInStorage = 8,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 3,
                            EquipmentTypeId = 17,
                            QuantityInRoom = 1,
                            QuantityInStorage = 5,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 4,
                            EquipmentTypeId = 18,
                            QuantityInRoom = 20,
                            QuantityInStorage = 100,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 5,
                            EquipmentTypeId = 19,
                            QuantityInRoom = 20,
                            QuantityInStorage = 100,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 6,
                            EquipmentTypeId = 22,
                            QuantityInRoom = 2,
                            QuantityInStorage = 9,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 7,
                            EquipmentTypeId = 23,
                            QuantityInRoom = 2,
                            QuantityInStorage = 11,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 8,
                            EquipmentTypeId = 24,
                            QuantityInRoom = 20,
                            QuantityInStorage = 100,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 9,
                            EquipmentTypeId = 25,
                            QuantityInRoom = 50,
                            QuantityInStorage = 200,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 10,
                            EquipmentTypeId = 26,
                            QuantityInRoom = 70,
                            QuantityInStorage = 250,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 11,
                            EquipmentTypeId = 27,
                            QuantityInRoom = 90,
                            QuantityInStorage = 300,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 12,
                            EquipmentTypeId = 28,
                            QuantityInRoom = 100,
                            QuantityInStorage = 500,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 13,
                            EquipmentTypeId = 29,
                            QuantityInRoom = 3,
                            QuantityInStorage = 6,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 14,
                            EquipmentTypeId = 30,
                            QuantityInRoom = 1,
                            QuantityInStorage = 12,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 15,
                            EquipmentTypeId = 31,
                            QuantityInRoom = 1,
                            QuantityInStorage = 13,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 16,
                            EquipmentTypeId = 32,
                            QuantityInRoom = 1,
                            QuantityInStorage = 14,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 17,
                            EquipmentTypeId = 34,
                            QuantityInRoom = 1,
                            QuantityInStorage = 10,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 18,
                            EquipmentTypeId = 35,
                            QuantityInRoom = 3,
                            QuantityInStorage = 20,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 19,
                            EquipmentTypeId = 36,
                            QuantityInRoom = 1,
                            QuantityInStorage = 5,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 20,
                            EquipmentTypeId = 37,
                            QuantityInRoom = 1,
                            QuantityInStorage = 5,
                            RoomId = 1003
                        },
                        new
                        {
                            Id = 21,
                            EquipmentTypeId = 6,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 1012
                        },
                        new
                        {
                            Id = 22,
                            EquipmentTypeId = 7,
                            QuantityInRoom = 4,
                            QuantityInStorage = 16,
                            RoomId = 1012
                        },
                        new
                        {
                            Id = 23,
                            EquipmentTypeId = 8,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 1014
                        },
                        new
                        {
                            Id = 24,
                            EquipmentTypeId = 9,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 1014
                        },
                        new
                        {
                            Id = 25,
                            EquipmentTypeId = 10,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 1014
                        },
                        new
                        {
                            Id = 26,
                            EquipmentTypeId = 11,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 1014
                        },
                        new
                        {
                            Id = 27,
                            EquipmentTypeId = 12,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 1014
                        },
                        new
                        {
                            Id = 28,
                            EquipmentTypeId = 33,
                            QuantityInRoom = 4,
                            QuantityInStorage = 15,
                            RoomId = 1014
                        },
                        new
                        {
                            Id = 29,
                            EquipmentTypeId = 34,
                            QuantityInRoom = 2,
                            QuantityInStorage = 10,
                            RoomId = 1014
                        },
                        new
                        {
                            Id = 30,
                            EquipmentTypeId = 35,
                            QuantityInRoom = 4,
                            QuantityInStorage = 20,
                            RoomId = 1014
                        },
                        new
                        {
                            Id = 31,
                            EquipmentTypeId = 5,
                            QuantityInRoom = 1,
                            QuantityInStorage = 4,
                            RoomId = 1019
                        },
                        new
                        {
                            Id = 32,
                            EquipmentTypeId = 6,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 1019
                        },
                        new
                        {
                            Id = 33,
                            EquipmentTypeId = 3,
                            QuantityInRoom = 1,
                            QuantityInStorage = 0,
                            RoomId = 1110
                        },
                        new
                        {
                            Id = 34,
                            EquipmentTypeId = 1,
                            QuantityInRoom = 1,
                            QuantityInStorage = 1,
                            RoomId = 1113
                        },
                        new
                        {
                            Id = 35,
                            EquipmentTypeId = 2,
                            QuantityInRoom = 1,
                            QuantityInStorage = 0,
                            RoomId = 1114
                        },
                        new
                        {
                            Id = 36,
                            EquipmentTypeId = 1,
                            QuantityInRoom = 1,
                            QuantityInStorage = 1,
                            RoomId = 1115
                        },
                        new
                        {
                            Id = 37,
                            EquipmentTypeId = 3,
                            QuantityInRoom = 1,
                            QuantityInStorage = 0,
                            RoomId = 1116
                        },
                        new
                        {
                            Id = 38,
                            EquipmentTypeId = 4,
                            QuantityInRoom = 1,
                            QuantityInStorage = 0,
                            RoomId = 1119
                        },
                        new
                        {
                            Id = 39,
                            EquipmentTypeId = 34,
                            QuantityInRoom = 3,
                            QuantityInStorage = 10,
                            RoomId = 1210
                        },
                        new
                        {
                            Id = 40,
                            EquipmentTypeId = 35,
                            QuantityInRoom = 3,
                            QuantityInStorage = 20,
                            RoomId = 1210
                        },
                        new
                        {
                            Id = 41,
                            EquipmentTypeId = 36,
                            QuantityInRoom = 3,
                            QuantityInStorage = 5,
                            RoomId = 1210
                        },
                        new
                        {
                            Id = 42,
                            EquipmentTypeId = 8,
                            QuantityInRoom = 1,
                            QuantityInStorage = 8,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 43,
                            EquipmentTypeId = 11,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 44,
                            EquipmentTypeId = 12,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 45,
                            EquipmentTypeId = 13,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 46,
                            EquipmentTypeId = 18,
                            QuantityInRoom = 20,
                            QuantityInStorage = 100,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 47,
                            EquipmentTypeId = 19,
                            QuantityInRoom = 20,
                            QuantityInStorage = 100,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 48,
                            EquipmentTypeId = 20,
                            QuantityInRoom = 3,
                            QuantityInStorage = 30,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 49,
                            EquipmentTypeId = 21,
                            QuantityInRoom = 3,
                            QuantityInStorage = 30,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 50,
                            EquipmentTypeId = 22,
                            QuantityInRoom = 2,
                            QuantityInStorage = 9,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 51,
                            EquipmentTypeId = 23,
                            QuantityInRoom = 2,
                            QuantityInStorage = 11,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 52,
                            EquipmentTypeId = 24,
                            QuantityInRoom = 20,
                            QuantityInStorage = 100,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 53,
                            EquipmentTypeId = 25,
                            QuantityInRoom = 50,
                            QuantityInStorage = 200,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 54,
                            EquipmentTypeId = 26,
                            QuantityInRoom = 70,
                            QuantityInStorage = 250,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 55,
                            EquipmentTypeId = 27,
                            QuantityInRoom = 90,
                            QuantityInStorage = 300,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 56,
                            EquipmentTypeId = 28,
                            QuantityInRoom = 100,
                            QuantityInStorage = 500,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 57,
                            EquipmentTypeId = 29,
                            QuantityInRoom = 3,
                            QuantityInStorage = 6,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 58,
                            EquipmentTypeId = 30,
                            QuantityInRoom = 1,
                            QuantityInStorage = 12,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 59,
                            EquipmentTypeId = 31,
                            QuantityInRoom = 1,
                            QuantityInStorage = 13,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 60,
                            EquipmentTypeId = 32,
                            QuantityInRoom = 1,
                            QuantityInStorage = 14,
                            RoomId = 1217
                        },
                        new
                        {
                            Id = 61,
                            EquipmentTypeId = 9,
                            QuantityInRoom = 1,
                            QuantityInStorage = 8,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 62,
                            EquipmentTypeId = 10,
                            QuantityInRoom = 1,
                            QuantityInStorage = 8,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 63,
                            EquipmentTypeId = 17,
                            QuantityInRoom = 1,
                            QuantityInStorage = 5,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 64,
                            EquipmentTypeId = 18,
                            QuantityInRoom = 20,
                            QuantityInStorage = 100,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 65,
                            EquipmentTypeId = 19,
                            QuantityInRoom = 20,
                            QuantityInStorage = 100,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 66,
                            EquipmentTypeId = 22,
                            QuantityInRoom = 2,
                            QuantityInStorage = 9,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 67,
                            EquipmentTypeId = 23,
                            QuantityInRoom = 2,
                            QuantityInStorage = 11,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 68,
                            EquipmentTypeId = 24,
                            QuantityInRoom = 20,
                            QuantityInStorage = 100,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 69,
                            EquipmentTypeId = 25,
                            QuantityInRoom = 50,
                            QuantityInStorage = 200,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 70,
                            EquipmentTypeId = 26,
                            QuantityInRoom = 70,
                            QuantityInStorage = 250,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 71,
                            EquipmentTypeId = 27,
                            QuantityInRoom = 90,
                            QuantityInStorage = 300,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 72,
                            EquipmentTypeId = 28,
                            QuantityInRoom = 100,
                            QuantityInStorage = 500,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 73,
                            EquipmentTypeId = 29,
                            QuantityInRoom = 3,
                            QuantityInStorage = 6,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 74,
                            EquipmentTypeId = 30,
                            QuantityInRoom = 1,
                            QuantityInStorage = 12,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 75,
                            EquipmentTypeId = 31,
                            QuantityInRoom = 1,
                            QuantityInStorage = 13,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 76,
                            EquipmentTypeId = 32,
                            QuantityInRoom = 1,
                            QuantityInStorage = 14,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 77,
                            EquipmentTypeId = 34,
                            QuantityInRoom = 1,
                            QuantityInStorage = 10,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 78,
                            EquipmentTypeId = 35,
                            QuantityInRoom = 3,
                            QuantityInStorage = 20,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 79,
                            EquipmentTypeId = 36,
                            QuantityInRoom = 1,
                            QuantityInStorage = 5,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 80,
                            EquipmentTypeId = 37,
                            QuantityInRoom = 1,
                            QuantityInStorage = 5,
                            RoomId = 2005
                        },
                        new
                        {
                            Id = 81,
                            EquipmentTypeId = 8,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 2009
                        },
                        new
                        {
                            Id = 82,
                            EquipmentTypeId = 9,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 2009
                        },
                        new
                        {
                            Id = 83,
                            EquipmentTypeId = 10,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 2009
                        },
                        new
                        {
                            Id = 84,
                            EquipmentTypeId = 11,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 2009
                        },
                        new
                        {
                            Id = 85,
                            EquipmentTypeId = 12,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 2009
                        },
                        new
                        {
                            Id = 86,
                            EquipmentTypeId = 33,
                            QuantityInRoom = 4,
                            QuantityInStorage = 15,
                            RoomId = 2009
                        },
                        new
                        {
                            Id = 87,
                            EquipmentTypeId = 34,
                            QuantityInRoom = 2,
                            QuantityInStorage = 10,
                            RoomId = 2009
                        },
                        new
                        {
                            Id = 88,
                            EquipmentTypeId = 35,
                            QuantityInRoom = 4,
                            QuantityInStorage = 20,
                            RoomId = 2009
                        },
                        new
                        {
                            Id = 89,
                            EquipmentTypeId = 39,
                            QuantityInRoom = 4,
                            QuantityInStorage = 40,
                            RoomId = 2009
                        },
                        new
                        {
                            Id = 90,
                            EquipmentTypeId = 40,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 2010
                        },
                        new
                        {
                            Id = 91,
                            EquipmentTypeId = 40,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 2013
                        },
                        new
                        {
                            Id = 92,
                            EquipmentTypeId = 14,
                            QuantityInRoom = 1,
                            QuantityInStorage = 5,
                            RoomId = 2105
                        },
                        new
                        {
                            Id = 93,
                            EquipmentTypeId = 15,
                            QuantityInRoom = 1,
                            QuantityInStorage = 6,
                            RoomId = 2108
                        },
                        new
                        {
                            Id = 94,
                            EquipmentTypeId = 16,
                            QuantityInRoom = 2,
                            QuantityInStorage = 7,
                            RoomId = 2117
                        },
                        new
                        {
                            Id = 95,
                            EquipmentTypeId = 16,
                            QuantityInRoom = 2,
                            QuantityInStorage = 7,
                            RoomId = 2118
                        },
                        new
                        {
                            Id = 96,
                            EquipmentTypeId = 34,
                            QuantityInRoom = 3,
                            QuantityInStorage = 10,
                            RoomId = 2208
                        },
                        new
                        {
                            Id = 97,
                            EquipmentTypeId = 35,
                            QuantityInRoom = 3,
                            QuantityInStorage = 20,
                            RoomId = 2208
                        },
                        new
                        {
                            Id = 98,
                            EquipmentTypeId = 36,
                            QuantityInRoom = 3,
                            QuantityInStorage = 5,
                            RoomId = 2208
                        },
                        new
                        {
                            Id = 99,
                            EquipmentTypeId = 34,
                            QuantityInRoom = 3,
                            QuantityInStorage = 10,
                            RoomId = 2209
                        },
                        new
                        {
                            Id = 100,
                            EquipmentTypeId = 35,
                            QuantityInRoom = 3,
                            QuantityInStorage = 20,
                            RoomId = 2209
                        },
                        new
                        {
                            Id = 101,
                            EquipmentTypeId = 36,
                            QuantityInRoom = 3,
                            QuantityInStorage = 5,
                            RoomId = 2209
                        },
                        new
                        {
                            Id = 102,
                            EquipmentTypeId = 17,
                            QuantityInRoom = 1,
                            QuantityInStorage = 5,
                            RoomId = 2210
                        },
                        new
                        {
                            Id = 103,
                            EquipmentTypeId = 24,
                            QuantityInRoom = 20,
                            QuantityInStorage = 100,
                            RoomId = 2210
                        },
                        new
                        {
                            Id = 104,
                            EquipmentTypeId = 25,
                            QuantityInRoom = 50,
                            QuantityInStorage = 200,
                            RoomId = 2210
                        },
                        new
                        {
                            Id = 105,
                            EquipmentTypeId = 34,
                            QuantityInRoom = 1,
                            QuantityInStorage = 10,
                            RoomId = 2210
                        },
                        new
                        {
                            Id = 106,
                            EquipmentTypeId = 35,
                            QuantityInRoom = 3,
                            QuantityInStorage = 20,
                            RoomId = 2210
                        },
                        new
                        {
                            Id = 107,
                            EquipmentTypeId = 36,
                            QuantityInRoom = 1,
                            QuantityInStorage = 5,
                            RoomId = 2210
                        },
                        new
                        {
                            Id = 108,
                            EquipmentTypeId = 37,
                            QuantityInRoom = 1,
                            QuantityInStorage = 5,
                            RoomId = 2210
                        },
                        new
                        {
                            Id = 109,
                            EquipmentTypeId = 8,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 2217
                        },
                        new
                        {
                            Id = 110,
                            EquipmentTypeId = 9,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 2217
                        },
                        new
                        {
                            Id = 111,
                            EquipmentTypeId = 10,
                            QuantityInRoom = 4,
                            QuantityInStorage = 8,
                            RoomId = 2217
                        },
                        new
                        {
                            Id = 112,
                            EquipmentTypeId = 11,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 2217
                        },
                        new
                        {
                            Id = 113,
                            EquipmentTypeId = 12,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 2217
                        },
                        new
                        {
                            Id = 114,
                            EquipmentTypeId = 13,
                            QuantityInRoom = 1,
                            QuantityInStorage = 2,
                            RoomId = 2217
                        },
                        new
                        {
                            Id = 115,
                            EquipmentTypeId = 33,
                            QuantityInRoom = 4,
                            QuantityInStorage = 15,
                            RoomId = 2217
                        },
                        new
                        {
                            Id = 116,
                            EquipmentTypeId = 34,
                            QuantityInRoom = 2,
                            QuantityInStorage = 10,
                            RoomId = 2217
                        },
                        new
                        {
                            Id = 117,
                            EquipmentTypeId = 35,
                            QuantityInRoom = 4,
                            QuantityInStorage = 20,
                            RoomId = 2217
                        },
                        new
                        {
                            Id = 118,
                            EquipmentTypeId = 39,
                            QuantityInRoom = 4,
                            QuantityInStorage = 40,
                            RoomId = 2217
                        });
                });

            modelBuilder.Entity("Model.Rooms.Occupation", b =>
                {
                    b.Property<int>("BedId")
                        .HasColumnType("int");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<string>("PatientId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasIndex("BedId");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("Occupation");
                });

            modelBuilder.Entity("Model.Rooms.Renovation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("MoveEquipment")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Renovations");
                });

            modelBuilder.Entity("Model.Rooms.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BedsCapacity")
                        .HasColumnType("int");

                    b.Property<int>("BedsFree")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("RoomLabel")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<string>("RoomUse")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "null",
                            RoomNumber = 1,
                            RoomType = 1,
                            RoomUse = "null"
                        },
                        new
                        {
                            Id = 2,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "null",
                            RoomNumber = 2,
                            RoomType = 1,
                            RoomUse = "null"
                        },
                        new
                        {
                            Id = 1001,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN1",
                            RoomNumber = 1,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1002,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN2",
                            RoomNumber = 2,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1003,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN3",
                            RoomNumber = 3,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1004,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN4",
                            RoomNumber = 4,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1005,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN5",
                            RoomNumber = 5,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1006,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN6",
                            RoomNumber = 6,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1007,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN7",
                            RoomNumber = 7,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1008,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN8",
                            RoomNumber = 8,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1009,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN9",
                            RoomNumber = 9,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1010,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN10",
                            RoomNumber = 10,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1011,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 1,
                            RoomLabel = "0F-GN11",
                            RoomNumber = 11,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1012,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "0F-CA1",
                            RoomNumber = 12,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1013,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "0F-CA2",
                            RoomNumber = 13,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1014,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "0F-CA3",
                            RoomNumber = 14,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1015,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "0F-CA4",
                            RoomNumber = 15,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1016,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "0F-CA5",
                            RoomNumber = 16,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1017,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "0F-CA6",
                            RoomNumber = 17,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1018,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "0F-CA7",
                            RoomNumber = 18,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1019,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "0F-CA8",
                            RoomNumber = 19,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1020,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "0F-CA9",
                            RoomNumber = 20,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 1021,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 2,
                            RoomLabel = "0F-CA10",
                            RoomNumber = 21,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 1101,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON1",
                            RoomNumber = 1,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1102,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON2",
                            RoomNumber = 2,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1103,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON3",
                            RoomNumber = 3,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1104,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON4",
                            RoomNumber = 4,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1105,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON5",
                            RoomNumber = 5,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1106,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON6",
                            RoomNumber = 6,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1107,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON7",
                            RoomNumber = 7,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1108,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON8",
                            RoomNumber = 8,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1109,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON9",
                            RoomNumber = 9,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1110,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON10",
                            RoomNumber = 10,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1111,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON11",
                            RoomNumber = 11,
                            RoomType = 4,
                            RoomUse = "Storage room"
                        },
                        new
                        {
                            Id = 1112,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 3,
                            RoomLabel = "1F-ON12",
                            RoomNumber = 12,
                            RoomType = 4,
                            RoomUse = "Storage room"
                        },
                        new
                        {
                            Id = 1113,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 4,
                            RoomLabel = "1F-ON13",
                            RoomNumber = 13,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1114,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 4,
                            RoomLabel = "1F-RD1",
                            RoomNumber = 14,
                            RoomType = 2,
                            RoomUse = "Operation room"
                        },
                        new
                        {
                            Id = 1115,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 4,
                            RoomLabel = "1F-RD2",
                            RoomNumber = 15,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1116,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 4,
                            RoomLabel = "1F-RD3",
                            RoomNumber = 16,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1117,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 4,
                            RoomLabel = "1F-RD4",
                            RoomNumber = 17,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1118,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 4,
                            RoomLabel = "1F-RD5",
                            RoomNumber = 18,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1119,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 4,
                            RoomLabel = "1F-RD6",
                            RoomNumber = 19,
                            RoomType = 2,
                            RoomUse = "Operation room"
                        },
                        new
                        {
                            Id = 1120,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 4,
                            RoomLabel = "1F-RD7",
                            RoomNumber = 20,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 1121,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 4,
                            RoomLabel = "1F-RD8",
                            RoomNumber = 21,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 1201,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE1",
                            RoomNumber = 1,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1202,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE2",
                            RoomNumber = 2,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1203,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE3",
                            RoomNumber = 3,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1204,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE4",
                            RoomNumber = 4,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1205,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE5",
                            RoomNumber = 5,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 1206,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE6",
                            RoomNumber = 6,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1207,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE7",
                            RoomNumber = 7,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1208,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE8",
                            RoomNumber = 8,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1209,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE9",
                            RoomNumber = 9,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1210,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE10",
                            RoomNumber = 10,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1211,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE11",
                            RoomNumber = 11,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1212,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE12",
                            RoomNumber = 12,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 1213,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE13",
                            RoomNumber = 13,
                            RoomType = 4,
                            RoomUse = "Storage room"
                        },
                        new
                        {
                            Id = 1214,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 5,
                            RoomLabel = "2F-NE14",
                            RoomNumber = 14,
                            RoomType = 4,
                            RoomUse = "Storage room"
                        },
                        new
                        {
                            Id = 1215,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 6,
                            RoomLabel = "2F-IC1",
                            RoomNumber = 15,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1216,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 6,
                            RoomLabel = "2F-IC2",
                            RoomNumber = 16,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1217,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 6,
                            RoomLabel = "2F-IC3",
                            RoomNumber = 17,
                            RoomType = 2,
                            RoomUse = "Operation room"
                        },
                        new
                        {
                            Id = 1218,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 6,
                            RoomLabel = "2F-IC4",
                            RoomNumber = 18,
                            RoomType = 2,
                            RoomUse = "Operation room"
                        },
                        new
                        {
                            Id = 1219,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 6,
                            RoomLabel = "2F-IC5",
                            RoomNumber = 19,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1220,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 6,
                            RoomLabel = "2F-IC6",
                            RoomNumber = 20,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 1221,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 6,
                            RoomLabel = "2F-IC7",
                            RoomNumber = 21,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 1222,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 6,
                            RoomLabel = "2F-IC7",
                            RoomNumber = 22,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 2001,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 7,
                            RoomLabel = "0F-EM1",
                            RoomNumber = 1,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2002,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 7,
                            RoomLabel = "0F-EM2",
                            RoomNumber = 2,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2003,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 7,
                            RoomLabel = "0F-EM3",
                            RoomNumber = 3,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2004,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 7,
                            RoomLabel = "0F-EM4",
                            RoomNumber = 4,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2005,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 7,
                            RoomLabel = "0F-EM5",
                            RoomNumber = 5,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2006,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 7,
                            RoomLabel = "0F-EM6",
                            RoomNumber = 6,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2007,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 7,
                            RoomLabel = "0F-EM7",
                            RoomNumber = 7,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2008,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 7,
                            RoomLabel = "0F-EM8",
                            RoomNumber = 8,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2009,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 8,
                            RoomLabel = "0F-DY1",
                            RoomNumber = 9,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2010,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 8,
                            RoomLabel = "0F-DY2",
                            RoomNumber = 10,
                            RoomType = 2,
                            RoomUse = "Operation room"
                        },
                        new
                        {
                            Id = 2011,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 8,
                            RoomLabel = "0F-DY3",
                            RoomNumber = 11,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2012,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 8,
                            RoomLabel = "0F-DY4",
                            RoomNumber = 12,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2013,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 8,
                            RoomLabel = "0F-DY5",
                            RoomNumber = 13,
                            RoomType = 2,
                            RoomUse = "Operation room"
                        },
                        new
                        {
                            Id = 2014,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 8,
                            RoomLabel = "0F-DY6",
                            RoomNumber = 14,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2015,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 8,
                            RoomLabel = "0F-DY7",
                            RoomNumber = 15,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 2016,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 8,
                            RoomLabel = "0F-DY8",
                            RoomNumber = 16,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 2101,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE1",
                            RoomNumber = 1,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2102,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE2",
                            RoomNumber = 2,
                            RoomType = 4,
                            RoomUse = "Storage room"
                        },
                        new
                        {
                            Id = 2103,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE3",
                            RoomNumber = 3,
                            RoomType = 4,
                            RoomUse = "Storage room"
                        },
                        new
                        {
                            Id = 2104,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE4",
                            RoomNumber = 4,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2105,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE5",
                            RoomNumber = 5,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2106,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE6",
                            RoomNumber = 6,
                            RoomType = 4,
                            RoomUse = "Storage room"
                        },
                        new
                        {
                            Id = 2107,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE7",
                            RoomNumber = 7,
                            RoomType = 4,
                            RoomUse = "Storage room"
                        },
                        new
                        {
                            Id = 2108,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE8",
                            RoomNumber = 8,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2109,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE9",
                            RoomNumber = 9,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2110,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE10",
                            RoomNumber = 10,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2111,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE11",
                            RoomNumber = 11,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2112,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE12",
                            RoomNumber = 12,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2113,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE13",
                            RoomNumber = 13,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2114,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 9,
                            RoomLabel = "1F-GE14",
                            RoomNumber = 14,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2115,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 10,
                            RoomLabel = "1F-HM1",
                            RoomNumber = 15,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2116,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 10,
                            RoomLabel = "1F-HM2",
                            RoomNumber = 16,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2117,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 10,
                            RoomLabel = "1F-HM3",
                            RoomNumber = 17,
                            RoomType = 2,
                            RoomUse = "Operation room"
                        },
                        new
                        {
                            Id = 2118,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 10,
                            RoomLabel = "1F-HM4",
                            RoomNumber = 18,
                            RoomType = 2,
                            RoomUse = "Operation room"
                        },
                        new
                        {
                            Id = 2119,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 10,
                            RoomLabel = "1F-HM5",
                            RoomNumber = 19,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2120,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 10,
                            RoomLabel = "1F-HM6",
                            RoomNumber = 20,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2121,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 10,
                            RoomLabel = "1F-HM7",
                            RoomNumber = 21,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 2122,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 10,
                            RoomLabel = "1F-HM8",
                            RoomNumber = 22,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 2201,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM1",
                            RoomNumber = 1,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2202,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM2",
                            RoomNumber = 2,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2203,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM3",
                            RoomNumber = 3,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2204,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM4",
                            RoomNumber = 4,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2205,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM5",
                            RoomNumber = 5,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2206,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM6",
                            RoomNumber = 6,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2207,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM7",
                            RoomNumber = 7,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2208,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM8",
                            RoomNumber = 8,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2209,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM9",
                            RoomNumber = 9,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2210,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM10",
                            RoomNumber = 10,
                            RoomType = 1,
                            RoomUse = "Examination room"
                        },
                        new
                        {
                            Id = 2211,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM11",
                            RoomNumber = 11,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2212,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM12",
                            RoomNumber = 12,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2213,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM13",
                            RoomNumber = 13,
                            RoomType = 3,
                            RoomUse = "Auxiliary room"
                        },
                        new
                        {
                            Id = 2214,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 11,
                            RoomLabel = "2F-RM14",
                            RoomNumber = 14,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2215,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 12,
                            RoomLabel = "2F-ID1",
                            RoomNumber = 15,
                            RoomType = 2,
                            RoomUse = "Operation room"
                        },
                        new
                        {
                            Id = 2216,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 12,
                            RoomLabel = "2F-ID2",
                            RoomNumber = 16,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2217,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 12,
                            RoomLabel = "2F-ID3",
                            RoomNumber = 17,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2218,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 12,
                            RoomLabel = "2F-ID4",
                            RoomNumber = 18,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2219,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 12,
                            RoomLabel = "2F-ID5",
                            RoomNumber = 19,
                            RoomType = 0,
                            RoomUse = "Patient room"
                        },
                        new
                        {
                            Id = 2220,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 12,
                            RoomLabel = "2F-ID6",
                            RoomNumber = 20,
                            RoomType = 2,
                            RoomUse = "Operation room"
                        },
                        new
                        {
                            Id = 2221,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 12,
                            RoomLabel = "2F-ID7",
                            RoomNumber = 21,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        },
                        new
                        {
                            Id = 2222,
                            BedsCapacity = 10,
                            BedsFree = 3,
                            DepartmentId = 12,
                            RoomLabel = "2F-ID8",
                            RoomNumber = 22,
                            RoomType = 3,
                            RoomUse = "Elevator"
                        });
                });

            modelBuilder.Entity("Model.Schedule.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DoctorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool>("Finished")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TypeOfAppointment")
                        .HasColumnType("int");

                    b.Property<bool>("Urgent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("WeeklyAppointmentReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("MedicalRecordId");

                    b.HasIndex("RoomId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Model.Users.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Apartment")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apartment = 0,
                            CityId = 21000,
                            Floor = 0,
                            Number = 4,
                            Street = "Radnicka"
                        },
                        new
                        {
                            Id = 2,
                            Apartment = 0,
                            CityId = 11000,
                            Floor = 0,
                            Number = 5,
                            Street = "Gospodara Vucica"
                        },
                        new
                        {
                            Id = 3,
                            Apartment = 0,
                            CityId = 11000,
                            Floor = 0,
                            Number = 28,
                            Street = "Stefana Nemanje"
                        },
                        new
                        {
                            Id = 4,
                            Apartment = 0,
                            CityId = 11000,
                            Floor = 0,
                            Number = 27,
                            Street = "Stefana Nemanje"
                        });
                });

            modelBuilder.Entity("Model.Users.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DoctorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Image")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PostContentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PostContentId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Model.Users.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 21000,
                            Name = "Novi Sad",
                            StateId = 1L
                        },
                        new
                        {
                            Id = 11000,
                            Name = "Beograd",
                            StateId = 1L
                        });
                });

            modelBuilder.Entity("Model.Users.DoctorReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfReview")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DoctorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("PatientId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("DoctorReviews");
                });

            modelBuilder.Entity("Model.Users.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("AllowedForPublishing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Anonymous")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredUserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("RegisteredUserId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalNotes = "Sve je super!",
                            AllowedForPublishing = true,
                            Anonymous = false,
                            Approved = true,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0,
                            RegisteredUserId = "2406978890045"
                        },
                        new
                        {
                            Id = 2,
                            AdditionalNotes = "Bolnica je veoma losa, bas sam razocaran! Rupe u zidovima, voda curi na sve strane, treba vas zatvoriti!!!",
                            AllowedForPublishing = true,
                            Anonymous = false,
                            Approved = false,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0,
                            RegisteredUserId = "2406978890045"
                        },
                        new
                        {
                            Id = 3,
                            AdditionalNotes = "Predivno, ali i ruzno! Sramite se! Cestitke... <3",
                            AllowedForPublishing = false,
                            Anonymous = false,
                            Approved = false,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0,
                            RegisteredUserId = "2406978890045"
                        },
                        new
                        {
                            Id = 4,
                            AdditionalNotes = "Odlicno!",
                            AllowedForPublishing = false,
                            Anonymous = false,
                            Approved = false,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = 0,
                            RegisteredUserId = "2406978890045"
                        });
                });

            modelBuilder.Entity("Model.Users.Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Hospitals");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            AddressId = 1,
                            Description = "blablal",
                            Name = "Medbay"
                        },
                        new
                        {
                            Id = 1,
                            AddressId = 3,
                            Description = "Hospital 1",
                            Name = "Hospital 1"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 4,
                            Description = "Hospital 2",
                            Name = "Hospital 2"
                        });
                });

            modelBuilder.Entity("Model.Users.InsurancePolicy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Company")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("InsurancePolicies");

                    b.HasData(
                        new
                        {
                            Id = "policy1",
                            Company = "Dunav osiguranje d.o.o",
                            EndTime = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Model.Users.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("NotificationCategory")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredUserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("RegisteredUserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Model.Users.PostContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ContentTitle")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("PostContents");
                });

            modelBuilder.Entity("Model.Users.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AuthorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("FrequentlyAsked")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PostContentId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionReplyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostContentId");

                    b.HasIndex("QuestionReplyId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Model.Users.QuestionReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AuthorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("QuestionReplies");
                });

            modelBuilder.Entity("Model.Users.RegisteredUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("CurrResidenceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("EducationLevel")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("InsurancePolicyId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("NotificationId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PlaceOfBirthId")
                        .HasColumnType("int");

                    b.Property<string>("Profession")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CurrResidenceId");

                    b.HasIndex("InsurancePolicyId");

                    b.HasIndex("NotificationId");

                    b.HasIndex("PlaceOfBirthId");

                    b.ToTable("RegisteredUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("RegisteredUser");

                    b.HasData(
                        new
                        {
                            Id = "2406978890045",
                            CurrResidenceId = 1,
                            DateOfBirth = new DateTime(1978, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EducationLevel = 2,
                            Email = "marko@gmail.com",
                            Gender = 0,
                            InsurancePolicyId = "policy1",
                            Name = "Marko",
                            Password = "marko1978",
                            Phone = "065/123-4554",
                            PlaceOfBirthId = 11000,
                            Profession = "vodoinstalater",
                            ProfileImage = ".",
                            Surname = "Markovic",
                            Username = "markic"
                        });
                });

            modelBuilder.Entity("Model.Users.Shift", b =>
                {
                    b.Property<int>("EndHour")
                        .HasColumnType("int");

                    b.Property<int>("StartHour")
                        .HasColumnType("int");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("Model.Users.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DoctorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("SpecializationName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SpecializationName = "Interna medicina"
                        },
                        new
                        {
                            Id = 2,
                            SpecializationName = "Hirurgija"
                        });
                });

            modelBuilder.Entity("Model.Users.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Serbia"
                        });
                });

            modelBuilder.Entity("Model.Users.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("AverageGrade")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PatientId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("Model.Users.SurveyQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("SurveyQuestions");
                });

            modelBuilder.Entity("Model.Users.VacationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ReasonForVacation")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("VacationRequests");
                });

            modelBuilder.Entity("Model.Users.WorkDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkDays");
                });

            modelBuilder.Entity("PharmacyIntegration.Model.Pharmacy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("APIEndpoint")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("APIKey")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("RecieveNotificationFrom")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Pharmacies");

                    b.HasData(
                        new
                        {
                            Id = "Jankovic",
                            APIEndpoint = "jankovic.rs",
                            APIKey = "ID1APIKEYAAAA",
                            RecieveNotificationFrom = true
                        },
                        new
                        {
                            Id = "Liman",
                            APIEndpoint = "liman.li",
                            APIKey = "ID2APIKEYAAAA",
                            RecieveNotificationFrom = true
                        });
                });

            modelBuilder.Entity("PharmacyIntegration.Model.PharmacyNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PharmacyId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("PharmacyNotifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Approved = true,
                            Content = "Lexapro on sale! Get 15% off!",
                            PharmacyId = "Jankovic"
                        },
                        new
                        {
                            Id = 2,
                            Approved = true,
                            Content = "Aspirin on sale! Get 11% off!",
                            PharmacyId = "Liman"
                        });
                });

            modelBuilder.Entity("Backend.Examinations.Model.HospitalTreatment", b =>
                {
                    b.HasBaseType("Backend.Examinations.Model.Treatment");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("DepartmentId");

                    b.HasDiscriminator().HasValue("HospitalTreatment");
                });

            modelBuilder.Entity("Backend.Examinations.Model.Prescription", b =>
                {
                    b.HasBaseType("Backend.Examinations.Model.Treatment");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HourlyIntake")
                        .HasColumnType("int");

                    b.Property<int>("MedicationId")
                        .HasColumnType("int");

                    b.Property<bool>("Reserved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("MedicationId");

                    b.HasDiscriminator().HasValue("Prescription");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2020, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExaminationSurgeryId = 1,
                            Type = 0,
                            EndDate = new DateTime(2020, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyIntake = 6,
                            MedicationId = 1,
                            Reserved = true,
                            StartDate = new DateTime(2020, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2020, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExaminationSurgeryId = 1,
                            Type = 0,
                            EndDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyIntake = 6,
                            MedicationId = 1,
                            Reserved = true,
                            StartDate = new DateTime(2020, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Model.Users.Employee", b =>
                {
                    b.HasBaseType("Model.Users.RegisteredUser");

                    b.Property<string>("Biography")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("CurrentlyWorking")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("VacationLeave")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("WorkersID")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("Model.Users.Manager", b =>
                {
                    b.HasBaseType("Model.Users.RegisteredUser");

                    b.HasDiscriminator().HasValue("Manager");
                });

            modelBuilder.Entity("Model.Users.Patient", b =>
                {
                    b.HasBaseType("Model.Users.RegisteredUser");

                    b.Property<bool>("Blocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ChosenDoctorId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsGuestAccount")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasIndex("ChosenDoctorId");

                    b.HasDiscriminator().HasValue("Patient");

                    b.HasData(
                        new
                        {
                            Id = "2406978890046",
                            CurrResidenceId = 1,
                            DateOfBirth = new DateTime(1978, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EducationLevel = 2,
                            Email = "pera@gmail.com",
                            Gender = 0,
                            InsurancePolicyId = "policy1",
                            Name = "Petar",
                            Password = "pera1978",
                            Phone = "065/123-4554",
                            PlaceOfBirthId = 11000,
                            Profession = "vodoinstalater",
                            ProfileImage = "http://localhost:8080/Resources/Images/1234567891989/among-us-5659730_1280.png",
                            Surname = "Petrovic",
                            Username = "pera",
                            Blocked = false,
                            ChosenDoctorId = "2406978890047",
                            Confirmed = false,
                            IsGuestAccount = false
                        });
                });

            modelBuilder.Entity("Model.Users.Doctor", b =>
                {
                    b.HasBaseType("Model.Users.Employee");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("ExaminationRoomId")
                        .HasColumnType("int");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("OnCall")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OperationRoomId")
                        .HasColumnType("int");

                    b.Property<double>("PatientReview")
                        .HasColumnType("double");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ExaminationRoomId");

                    b.HasIndex("OperationRoomId");

                    b.HasDiscriminator().HasValue("Doctor");

                    b.HasData(
                        new
                        {
                            Id = "2406978890047",
                            CurrResidenceId = 1,
                            DateOfBirth = new DateTime(1978, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EducationLevel = 2,
                            Email = "mika@gmail.com",
                            Gender = 0,
                            InsurancePolicyId = "policy1",
                            Name = "Milan",
                            Password = "mika1978",
                            Phone = "065/123-4554",
                            PlaceOfBirthId = 11000,
                            Profession = "vodoinstalater",
                            ProfileImage = ".",
                            Surname = "Milanovic",
                            Username = "mika",
                            CurrentlyWorking = false,
                            VacationLeave = false,
                            WorkersID = 0,
                            DepartmentId = 1,
                            ExaminationRoomId = 1003,
                            LicenseNumber = "001",
                            OnCall = true,
                            OperationRoomId = 1114,
                            PatientReview = 4.5
                        });
                });

            modelBuilder.Entity("Model.Users.Secretary", b =>
                {
                    b.HasBaseType("Model.Users.Employee");

                    b.HasDiscriminator().HasValue("Secretary");
                });

            modelBuilder.Entity("Backend.Examinations.Model.EmergencyRequest", b =>
                {
                    b.HasOne("Backend.Records.Model.MedicalRecord", "MedicalRecord")
                        .WithMany()
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Users.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Examinations.Model.ExaminationSurgery", b =>
                {
                    b.HasOne("Model.Users.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("Backend.Records.Model.MedicalRecord", "MedicalRecord")
                        .WithMany()
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Examinations.Model.Treatment", b =>
                {
                    b.HasOne("Backend.Examinations.Model.ExaminationSurgery", "ExaminationSurgery")
                        .WithMany("Treatments")
                        .HasForeignKey("ExaminationSurgeryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Medications.Model.Allergens", b =>
                {
                    b.HasOne("Backend.Records.Model.MedicalRecord", "MedicalRecord")
                        .WithMany("Allergies")
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Medications.Model.Medication", null)
                        .WithMany("Allergens")
                        .HasForeignKey("MedicationId");
                });

            modelBuilder.Entity("Backend.Medications.Model.DosageOfIngredient", b =>
                {
                    b.HasOne("Backend.Medications.Model.Medication", null)
                        .WithMany("MedicationContent")
                        .HasForeignKey("MedicationId");

                    b.HasOne("Backend.Medications.Model.MedicationIngredient", "MedicationIngredient")
                        .WithMany()
                        .HasForeignKey("MedicationIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Medications.Model.Medication", b =>
                {
                    b.HasOne("Backend.Medications.Model.MedicationCategory", "MedicationCategory")
                        .WithMany()
                        .HasForeignKey("MedicationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Medications.Model.Medication", null)
                        .WithMany("AlternativeMedication")
                        .HasForeignKey("MedicationId");

                    b.HasOne("Model.Rooms.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Medications.Model.MedicationCategory", b =>
                {
                    b.HasOne("Model.Users.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Medications.Model.SideEffect", b =>
                {
                    b.HasOne("Backend.Medications.Model.Medication", null)
                        .WithMany("SideEffects")
                        .HasForeignKey("MedicationId");

                    b.HasOne("Backend.Records.Model.Symptoms", "SideEffects")
                        .WithMany()
                        .HasForeignKey("SideEffectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Medications.Model.ValidationMed", b =>
                {
                    b.HasOne("Model.Users.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("Backend.Medications.Model.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Records.Model.Diagnosis", b =>
                {
                    b.HasOne("Backend.Examinations.Model.ExaminationSurgery", "ExaminationSurgery")
                        .WithMany("Diagnoses")
                        .HasForeignKey("ExaminationSurgeryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Records.Model.FamilyIllnessHistory", null)
                        .WithMany("Diagnosis")
                        .HasForeignKey("FamilyIllnessHistoryId");

                    b.HasOne("Backend.Records.Model.MedicalRecord", "MedicalRecord")
                        .WithMany("IllnessHistory")
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Records.Model.FamilyIllnessHistory", b =>
                {
                    b.HasOne("Backend.Records.Model.MedicalRecord", "MedicalRecord")
                        .WithMany("FamilyIllnessHistory")
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Records.Model.MedicalRecord", b =>
                {
                    b.HasOne("Model.Users.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("Backend.Records.Model.Symptoms", b =>
                {
                    b.HasOne("Backend.Records.Model.Diagnosis", "Diagnosis")
                        .WithMany("Symptoms")
                        .HasForeignKey("DiagnosisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Records.Model.Therapy", b =>
                {
                    b.HasOne("Backend.Records.Model.MedicalRecord", "MedicalRecord")
                        .WithMany("Therapies")
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Medications.Model.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Records.Model.Vaccines", b =>
                {
                    b.HasOne("Backend.Records.Model.MedicalRecord", "MedicalRecord")
                        .WithMany("Vaccines")
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Reports.Model.MedicationUsage", b =>
                {
                    b.HasOne("Backend.Medications.Model.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Reports.Model.MedicationUsageReport", null)
                        .WithMany("MedicationUsages")
                        .HasForeignKey("MedicationUsageReportId");
                });

            modelBuilder.Entity("Model.Rooms.Bed", b =>
                {
                    b.HasOne("Model.Rooms.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Rooms.Department", b =>
                {
                    b.HasOne("Model.Users.Hospital", "Hospital")
                        .WithMany()
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Rooms.HospitalEquipment", b =>
                {
                    b.HasOne("Model.Rooms.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Rooms.Room", "Room")
                        .WithMany("HospitalEquipment")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Rooms.Occupation", b =>
                {
                    b.HasOne("Model.Rooms.Bed", "Bed")
                        .WithMany()
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Records.Model.MedicalRecord", "MedicalRecord")
                        .WithMany()
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Rooms.Renovation", b =>
                {
                    b.HasOne("Model.Rooms.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Rooms.Room", b =>
                {
                    b.HasOne("Model.Rooms.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Schedule.Appointment", b =>
                {
                    b.HasOne("Model.Users.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("Backend.Records.Model.MedicalRecord", "MedicalRecord")
                        .WithMany()
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Rooms.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Users.Address", b =>
                {
                    b.HasOne("Model.Users.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Users.Article", b =>
                {
                    b.HasOne("Model.Users.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("Model.Users.PostContent", "PostContent")
                        .WithMany()
                        .HasForeignKey("PostContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Users.City", b =>
                {
                    b.HasOne("Model.Users.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Users.DoctorReview", b =>
                {
                    b.HasOne("Model.Users.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("Model.Users.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("Model.Users.Feedback", b =>
                {
                    b.HasOne("Model.Users.RegisteredUser", "RegisteredUser")
                        .WithMany()
                        .HasForeignKey("RegisteredUserId");
                });

            modelBuilder.Entity("Model.Users.Hospital", b =>
                {
                    b.HasOne("Model.Users.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Users.Notification", b =>
                {
                    b.HasOne("Model.Users.RegisteredUser", "RegisteredUser")
                        .WithMany()
                        .HasForeignKey("RegisteredUserId");
                });

            modelBuilder.Entity("Model.Users.Question", b =>
                {
                    b.HasOne("Model.Users.Patient", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("Model.Users.PostContent", "PostContent")
                        .WithMany()
                        .HasForeignKey("PostContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Users.QuestionReply", "QuestionReply")
                        .WithMany()
                        .HasForeignKey("QuestionReplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Users.QuestionReply", b =>
                {
                    b.HasOne("Model.Users.Doctor", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");
                });

            modelBuilder.Entity("Model.Users.RegisteredUser", b =>
                {
                    b.HasOne("Model.Users.Address", "CurrResidence")
                        .WithMany()
                        .HasForeignKey("CurrResidenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Users.InsurancePolicy", "InsurancePolicy")
                        .WithMany()
                        .HasForeignKey("InsurancePolicyId");

                    b.HasOne("Model.Users.Notification", null)
                        .WithMany("NotificationTo")
                        .HasForeignKey("NotificationId");

                    b.HasOne("Model.Users.City", "PlaceOfBirth")
                        .WithMany()
                        .HasForeignKey("PlaceOfBirthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Users.Specialization", b =>
                {
                    b.HasOne("Model.Users.Doctor", null)
                        .WithMany("Specializations")
                        .HasForeignKey("DoctorId");
                });

            modelBuilder.Entity("Model.Users.Survey", b =>
                {
                    b.HasOne("Model.Users.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("Model.Users.SurveyQuestion", b =>
                {
                    b.HasOne("Model.Users.Survey", "Survey")
                        .WithMany("SurveyQuestions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Users.VacationRequest", b =>
                {
                    b.HasOne("Model.Users.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Model.Users.WorkDay", b =>
                {
                    b.HasOne("Model.Users.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Backend.Examinations.Model.HospitalTreatment", b =>
                {
                    b.HasOne("Model.Rooms.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Examinations.Model.Prescription", b =>
                {
                    b.HasOne("Backend.Medications.Model.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Users.Patient", b =>
                {
                    b.HasOne("Model.Users.Doctor", "ChosenDoctor")
                        .WithMany()
                        .HasForeignKey("ChosenDoctorId");
                });

            modelBuilder.Entity("Model.Users.Doctor", b =>
                {
                    b.HasOne("Model.Rooms.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Rooms.Room", "ExaminationRoom")
                        .WithMany()
                        .HasForeignKey("ExaminationRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Rooms.Room", "OperationRoom")
                        .WithMany()
                        .HasForeignKey("OperationRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
